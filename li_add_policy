#!/usr/bin/env python
#
# Copyright (C) 2018 Layered Insight - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential

from __future__ import print_function
import argparse
import sys
from pprint import pprint
import layint_runtime_api
from layint_runtime_api.rest import ApiException
from vyper import v
from li_utils.envtools import env_setup

# Parse CLI
parser = argparse.ArgumentParser()
parser.add_argument("-v", "--verbose", help="Verbose logging", action="store_true")
parser.add_argument("--name", help="Name for policy", required=True)
parser.add_argument("--description", help="Description for policy")
parser.add_argument("--default-file-action", help="Default action for file rules", choices=["allow", "deny"], default="allow")
parser.add_argument("--default-network-action", help="Default action for network rules", choices=["allow", "deny"], default="allow")
parser.add_argument("--default-program-action", help="Default action for program rules", choices=["allow", "deny"], default="allow")
args = parser.parse_args()

env_setup()

# Configure API key authorization: ApiKey
layint_runtime_api.configuration.api_key['Authorization'] = v.get("api_key")
policy_api = layint_runtime_api.PolicyApi()
policy_api.api_client.host = v.get("api_host")

policy = layint_runtime_api.Policy()
policy.name = args.name
policy.description = args.description
policy.default_file_action = "allow"
policy.default_network_action = "allow"
policy.default_program_action = "allow"
policy.schema_version = "v1.0"
policy.suspend = False
policy.rules = []

# Create new Policy definition
if args.verbose:
    print("Creating Policy %s on API host %s..." % (args.name, v.get("api_host")))
try:
    api_response = policy_api.add_policy(policy=policy)
    policy.id = api_response.id
    if args.verbose:
        pprint(api_response)
except ApiException as e:
    print("Exception when calling PolicyApi->add_policy: %s\n" % e)
    sys.exit()

if args.verbose:
    print("Policy created, ID " + str(policy.id))
