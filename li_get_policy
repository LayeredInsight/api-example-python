#!/usr/bin/env python
#
# Copyright (C) 2018 Layered Insight - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential

from __future__ import print_function
import argparse
import sys
import swagger_client
from pprint import pprint
from swagger_client.rest import ApiException
from vyper import v
from li_utils.envtools import env_setup

env_setup()

# Parse CLI
parser = argparse.ArgumentParser()
parser.add_argument("-v", "--verbose", help="Verbose logging", action="store_true")
parser.add_argument("--policyid", help="ID of policy to get", required=True)
args = parser.parse_args()

swagger_client.configuration.api_key['Authorization'] = v.get("api_key")
# swagger_client.configuration.debug = True
policy_api = swagger_client.PolicyApi()
policy_api.api_client.host = v.get("api_host")

if args.verbose:
    print("Looking up policy %s on API host %s..." % (args.policyid, v.get("api_host")))
try:
    policy = policy_api.get_policy(args.policyid)
except ApiException as e:
    print("Exception when calling PolicyAPI->get_policy: %s\n" % e)
    sys.exit()

if args.verbose:
    print("Got policy:")
    print(" Name: %s" % (policy.name))
    print(" ID: %s" % (policy.id))
    print(" Description: %s" % (policy.description))
    print(" User ID: %s" % (policy.user_id))
    print(" Group ID: %s" % (policy.group_id))
    print(" Schema Version: %s" % (policy.schema_version))
    # pprint(policy)
