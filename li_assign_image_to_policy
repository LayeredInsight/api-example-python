#!/usr/bin/env python
#
# Copyright (C) 2018 Layered Insight - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential

from __future__ import print_function
import argparse
import sys
import swagger_client
from pprint import pprint
from swagger_client.rest import ApiException
from vyper import v
from li_utils.envtools import env_setup

env_setup()

# Parse CLI
parser = argparse.ArgumentParser()
parser.add_argument("-v", "--verbose", help="Verbose logging", action="store_true")
parser.add_argument("--policyid", help="ID of security policy to apply to image", required=True)
parser.add_argument("--imageid", help="ID of image to assign poilcy to", required=True)
args = parser.parse_args()

swagger_client.configuration.api_key['Authorization'] = v.get("api_key")
policy_api = swagger_client.PolicyApi()
policy_api.api_client.host = v.get("api_host")

if args.verbose:
    print("Looking up policy %s on API host %s..." % (args.policyid, v.get("api_host")))
try:
    policy = policy_api.get_policy(args.policyid)
except ApiException as e:
    print("Exception when calling PolicyApi->get_policy_by_name: %s\n" % e)
    sys.exit()

image_api = swagger_client.ImageApi()
image_api.api_client.host = v.get("api_host")

if args.verbose:
    print("Looking up image %s on API host %s..." % (args.imageid, v.get("api_host")))
try:
    image = image_api.get_image(args.imageid)
except ApiException as e:
    print("Exception when calling ImageApi->get_image: %s\n" % e)
    sys.exit()

if args.verbose:
    print("Got image image:")
    pprint(image)

image.policy_id = policy.id

# Update image
if args.verbose:
    print("Updating Image on API host %s..." % (v.get("api_host")))
    pprint(image)
try:
    api_response = image_api.update_image(image.id, image=image)
except ApiException as e:
    print("Exception when calling ImageApi->update_image: %s\n" % e)
    sys.exit()

if args.verbose:
    print("Image updated, ID " + str(image.id))
