#!/usr/bin/env python
#
# Copyright (C) 2018 Layered Insight - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential

from __future__ import print_function
import argparse
import sys
from pprint import pprint
import layint_api
from layint_api.rest import ApiException
from vyper import v
from li_utils.envtools import env_setup

# Parse CLI
parser = argparse.ArgumentParser()
parser.add_argument("-v", "--verbose", help="Verbose logging", action="store_true")
parser.add_argument("--name", help="Name of policy to match", required=False)
args = parser.parse_args()

env_setup()

layint_api.configuration.api_key['Authorization'] = v.get("api_key")
policy_api = layint_api.PolicyApi()
policy_api.api_client.host = v.get("api_host")

if args.verbose:
    print("Getting Policies on API host %s..." % (v.get("api_host")))
try:
    policies = policy_api.get_policies()
    if args.verbose:
        pprint(policies)
except ApiException as e:
    print("Exception when calling PolicyApi->get_policies: %s" % e)
    sys.exit()

for policy in policies:
    # optionally match policy name 
    policyName=policy['Name']
    if args.name is None or args.name == policyName:
        print(" %s - %s - %s" % (policy['ID'], policy['Name'], policy['Description']))
